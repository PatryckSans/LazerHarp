{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:3000\";\nexport const createUser = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/users`, userData);\n    console.log(\"Novo usuário criado:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao criar usuário:\", error.response.data.error);\n    throw new Error(error.response.data.error);\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, credentials);\n    console.log(\"Usuário logado:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao fazer login:\", error.response.data.error);\n    throw new Error(error.response.data.error);\n  }\n};\nexport const getUserDetails = async userId => {\n  try {\n    const response = await axios.get(`${API_URL}/users/${userId}`);\n    console.log(\"Detalhes do usuário:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao obter detalhes do usuário:\", error.response.data.error);\n    throw new Error(error.response.data.error);\n  }\n};\nexport const updateUser = async (userId, userData) => {\n  try {\n    const response = await axios.put(`${API_URL}/users/${userId}`, userData);\n    console.log(\"Usuário atualizado:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao atualizar usuário:\", error.response.data.error);\n    throw new Error(error.response.data.error);\n  }\n};\nexport const deleteUser = async userId => {\n  try {\n    await axios.delete(`${API_URL}/users/${userId}`);\n    console.log(\"Usuário excluído com sucesso!\");\n  } catch (error) {\n    console.error(\"Erro ao excluir usuário:\", error.response.data.error);\n    throw new Error(error.response.data.error);\n  }\n};","map":{"version":3,"names":["axios","API_URL","createUser","userData","response","post","console","log","data","error","Error","loginUser","credentials","getUserDetails","userId","get","updateUser","put","deleteUser","delete"],"sources":["/home/sanspa/LazerHarp/frontend/landing-page/src/Api/userApi.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:3000\";\n\nexport const createUser = async (userData) => {\n  try {\n    const response = await axios.post(`${API_URL}/users`, userData);\n    console.log(\"Novo usuário criado:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao criar usuário:\", error.response.data.error);\n    throw new Error(error.response.data.error);\n  }\n};\n\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, credentials);\n    console.log(\"Usuário logado:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao fazer login:\", error.response.data.error);\n    throw new Error(error.response.data.error);\n  }\n};\n\nexport const getUserDetails = async (userId) => {\n  try {\n    const response = await axios.get(`${API_URL}/users/${userId}`);\n    console.log(\"Detalhes do usuário:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\n      \"Erro ao obter detalhes do usuário:\",\n      error.response.data.error\n    );\n    throw new Error(error.response.data.error);\n  }\n};\n\nexport const updateUser = async (userId, userData) => {\n  try {\n    const response = await axios.put(`${API_URL}/users/${userId}`, userData);\n    console.log(\"Usuário atualizado:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao atualizar usuário:\", error.response.data.error);\n    throw new Error(error.response.data.error);\n  }\n};\n\nexport const deleteUser = async (userId) => {\n  try {\n    await axios.delete(`${API_URL}/users/${userId}`);\n    console.log(\"Usuário excluído com sucesso!\");\n  } catch (error) {\n    console.error(\"Erro ao excluir usuário:\", error.response.data.error);\n    throw new Error(error.response.data.error);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}